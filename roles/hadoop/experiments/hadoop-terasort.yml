# Author: Michael Sevilla
# Run the Hadoop TeraSort benchmark

- hosts: localhost
  vars:
    - libjars: "-libjars /tmp/docker/deploy/tmp/docker/src/tachyon/clients/client/target/tachyon-client-0.8.1-SNAPSHOT-jar-with-dependencies.jar "
    - args:    " {{ libjars }} -Dmapreduce.task.timeout=90000000 -Dtachyon.user.file.writetype.default=THROUGH"
    - dfs:     "dfs {{ libjars }}"
    - jar:     "jar /usr/hdp/2.3.4.0-3485/hadoop-mapreduce/hadoop-mapreduce-examples.jar"
    - hdfs:    "sudo -u yarn hdfs dfs {{ libjars }}"
    - yarn:    "sudo -u yarn yarn"
    - tachyon_input:  "tachyon://pdl360g9-11.private.net:19998/input"
    - tachyon_output: "tachyon://pdl360g9-11.private.net:19998/output"
  tasks: 
    - name:     cleanup old directories in Tachyon
      shell:    docker exec tachyon /tachyon/bin/tachyon tfs rmr /input
      ignore_errors: True
    - shell:    docker exec tachyon /tachyon/bin/tachyon tfs rmr /output
      ignore_errors: True
    - name:     cleanup old directories in HDFS
      command:  "{{ hdfs }} -rm -r input output"
      ignore_errors: True

    - name:     run TeraGen, write to HDFS
      command:  "{{ yarn }} {{ jar }} teragen {{ args }} 100 input"
      register: result
    - debug:    var=result.stderr.split('\n')

    - name:     run TeraGen, write to Tachyon
      command:  "{{ yarn }} {{ jar }} teragen {{ args }} 100 {{ tachyon_input }}"
      register: result
    - debug:    var=result.stderr.split('\n')

    - name:     run TeraSort, read HDFS, write HDFS
      command:  "{{ yarn }} {{ jar }} terasort {{ args }} input output"
      register: result
    - debug:    var=result.stderr.split('\n')
    - command:  "{{ hdfs }} -rm -r output"

    - name:     run TeraSort, read Tachyon, write HDFS
      command:  "{{ yarn }} {{ jar }} terasort {{ args }} {{ tachyon_input }} output"
      register: result
    - debug:    var=result.stderr.split('\n')
    - command:  "{{ hdfs }} -rm -r output"
  
    - name:     run TeraSort, read Tachyon, write Tachyon
      command:  "{{ yarn }} {{ jar }} terasort {{ args }} {{ tachyon_input }} {{ tachyon_output }}"
      register: result
    - debug:    var=result.stderr.split('\n')
    - shell:    docker exec tachyon /tachyon/bin/tachyon tfs rmr /output
      ignore_errors: True

    - name:     run TeraSort, read HDFS, write Tachyon
      command:  "{{ yarn }} {{ jar }} terasort {{ args }} input {{ tachyon_output }}"
      register: result
    - debug:    var=result.stderr.split('\n')
